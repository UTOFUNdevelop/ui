#!/usr/bin/env sh
set -o errexit -o nounset -o xtrace

: "${PACKAGE_NAME:?}"

npm install --save-dev --workspace "./packages/$PACKAGE_NAME" \
  eslint eslint-config-prettier eslint-import-resolver-typescript

cd "packages/$PACKAGE_NAME"

key_down='\033[B'

echo_sleep() {
  echo "$@"
  sleep 1.2
}

# Work around peer dependency conflict error with `eslint --init`
# https://docs.npmjs.com/cli/v8/using-npm/config
export npm_config_legacy_peer_deps=1

(
  sleep 4

  # How would you like to use ESLint? · style
  echo_sleep "$key_down"

  # What type of modules does your project use? · esm
  echo_sleep ''

  # Which framework does your project use? · none
  echo_sleep ''

  # Does your project use TypeScript? · Yes
  echo_sleep "$key_down"

  # Where does your code run? · browser, node
  echo_sleep a

  # How would you like to define a style for your project? · guide
  echo_sleep ''

  # Which style guide do you want to follow? · airbnb
  echo_sleep ''

  # What format do you want your config file to be in? · JSON
  echo_sleep "$key_down$key_down"

  # Would you like to install them now with npm? · Yes
  echo ''
) | npx eslint --init

# shellcheck disable=SC1004 # https://github.com/koalaman/shellcheck/wiki/SC1004#exceptions
sed -i.bak \
  -e '/"es2021": true,/a\
        "jest": true,' \
  -e '/"airbnb"/{s/$/,/
a\
        "plugin:import/typescript",\
        "prettier"
}' \
  -e '/"react"/d' \
  -e '/"rules":/a\
        "func-names": ["error", "as-needed"],\
        "import/extensions": ["error", "ignorePackages", {\
          "ts": "never",\
          "tsx": "never",\
          "js": "never",\
          "mjs": "never",\
          "jsx": "never"\
        }],\
        "import/no-extraneous-dependencies": [\
          "error",\
          {\
            "devDependencies": [\
              "**/*.{stories,test}.{js,jsx,ts,tsx}",\
              "test/**",\
              "tests/**",\
              "spec/**",\
              "**/__tests__/**",\
              "**/__mocks__/**",\
              "test.{js,jsx}",\
              "test-*.{js,jsx}",\
              "**/*{.,_}{test,spec}.{js,jsx}",\
              "**/jest.config.js",\
              "**/jest.setup.js",\
              "**/vue.config.js",\
              "**/webpack.config.js",\
              "**/webpack.config.*.js",\
              "**/rollup.config.js",\
              "**/rollup.config.*.js",\
              "**/gulpfile.js",\
              "**/gulpfile.*.js",\
              "**/Gruntfile{,.js}",\
              "**/protractor.conf.js",\
              "**/protractor.conf.*.js",\
              "**/karma.conf.js",\
              "**/.eslintrc.js"\
            ],\
            "optionalDependencies": false\
          }\
        ],\
        "react/jsx-filename-extension": ["error", { "extensions": [".tsx"] }],\
        "react/react-in-jsx-scope": "off"' \
  .eslintrc.json
rm .eslintrc.json.bak

npx --yes prettier --write .
git add .
git commit --message "Init @utofun/$PACKAGE_NAME eslint"
